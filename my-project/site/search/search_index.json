{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Project Name: Cafe Shop Overview The Cafe Shop project is a web application built with Django that allows users to browse and purchase products in an online cafe. The application has features such as user authentication, product management, order processing, and a shopping cart.","title":"Home"},{"location":"about/","text":"Project Name: Cafe Shop Overview The Cafe Shop project is a web application built with Django that allows users to browse and purchase products in an online cafe. The application has features such as user authentication, product management, order processing, and a shopping cart. Technologies Used \u2022 Django \u2022 Python 3.x \u2022 PostgreSQL \u2022 HTML/CSS Installation Instructions Clone the repository: git clone https://github.com/ms20002000/Cafe-shop.git Navigate to the project directory: cd cafe-shop Create a virtual environment: python3 -m venv venv Install the required dependencies: pip install -r requirements.txt Set up the PostgreSQL database: o Ensure PostgreSQL is installed and running. o Create a new database for the project. Update settings.py with your database credentials. Run migrations: python manage.py migrate Key Features \u2022 User Authentication: Users can sign up, log in, and log out. \u2022 Product Management: Admins can add, update, and delete products. \u2022 Shopping Cart: Users can add products to their cart and place orders. \u2022 Order Tracking: Users can track their order status. Folder Structure CAFE-SHOP/ \u2502 \u251c\u2500\u2500 account/ \u2502 \u251c\u2500\u2500 init .py/ \u2502 \u251c\u2500\u2500 admin.py/ \u2502 \u251c\u2500\u2500 apps.py/ \u2502 \u251c\u2500\u2500 authentication.py/ \u2502 \u251c\u2500\u2500 forms.py/ \u2502 \u251c\u2500\u2500 middleware.py/ \u2502 \u251c\u2500\u2500 models.py/ \u2502 \u251c\u2500\u2500 tests.py/ \u2502 \u251c\u2500\u2500 urls.py/ \u2502 \u2514\u2500\u2500 views.py/ \u2502 \u251c\u2500\u2500 cafe_shop/ \u2502 \u251c\u2500\u2500 init .py/ \u2502 \u251c\u2500\u2500 asgi.py/ \u2502 \u251c\u2500\u2500 settings.py/ \u2502 \u251c\u2500\u2500 urls.py/ \u2502 \u2514\u2500\u2500 wsgi.py/ \u2502 \u251c\u2500\u2500 cart/ \u2502 \u251c\u2500\u2500 init .py/ \u2502 \u251c\u2500\u2500 admin.py/ \u2502 \u251c\u2500\u2500 apps.py/ \u2502 \u251c\u2500\u2500 cart.py/ \u2502 \u251c\u2500\u2500 forms.py/ \u2502 \u251c\u2500\u2500 models.py/ \u2502 \u251c\u2500\u2500 tests.py/ \u2502 \u251c\u2500\u2500 urls.py/ \u2502 \u2514\u2500\u2500 views.py/ \u2502 \u251c\u2500\u2500 document/ \u2502 \u251c\u2500\u2500 erd/ \u2502 \u251c\u2500\u2500 media/ \u2502 \u251c\u2500\u2500 order/ \u2502 \u251c\u2500\u2500 init .py/ \u2502 \u251c\u2500\u2500 admin.py/ \u2502 \u251c\u2500\u2500 apps.py/ \u2502 \u251c\u2500\u2500 forms.py/ \u2502 \u251c\u2500\u2500 models.py/ \u2502 \u251c\u2500\u2500 signals.py/ \u2502 \u251c\u2500\u2500 tests.py/ \u2502 \u251c\u2500\u2500 urls.py/ \u2502 \u2514\u2500\u2500 views.py/ \u2502 \u2502 \u251c\u2500\u2500 product/ \u2502 \u251c\u2500\u2500 init .py/ \u2502 \u251c\u2500\u2500 admin.py/ \u2502 \u251c\u2500\u2500 apps.py/ \u2502 \u251c\u2500\u2500 forms.py/ \u2502 \u251c\u2500\u2500 models.py/ \u2502 \u251c\u2500\u2500 tests.py/ \u2502 \u251c\u2500\u2500 urls.py/ \u2502 \u2514\u2500\u2500 views.py/ \u2502 \u2502 \u251c\u2500\u2500 site_information/ \u2502 \u251c\u2500\u2500 init .py/ \u2502 \u251c\u2500\u2500 admin.py/ \u2502 \u251c\u2500\u2500 apps.py/ \u2502 \u251c\u2500\u2500 context_processors.py.py/ \u2502 \u251c\u2500\u2500 forms.py/ \u2502 \u251c\u2500\u2500 models.py/ \u2502 \u251c\u2500\u2500 tests.py/ \u2502 \u251c\u2500\u2500 urls.py/ \u2502 \u2514\u2500\u2500 views.py/ \u2502 \u2502 \u251c\u2500\u2500 static/ \u2502 \u251c\u2500\u2500 main/ \u2502 \u2514\u2500\u2500 staff/ \u2502 \u251c\u2500\u2500 templates/ \u2502 \u251c\u2500\u2500 base.html \u2502 \u2514\u2500\u2500 staff-base.html \u2502 \u251c\u2500\u2500 manage.py \u2502 \u251c\u2500\u2500 README.md \u2502 \u2514\u2500\u2500 requirements.txt API Endpoints POST /api/login - Login endpoint. POST /api/signup - Signup endpoint. GET /api/products - Fetch a list of products. POST /api/order - Place an order. Future Enhancements \u2022 Payment Integration: Add support for credit card payments. Contributors \u2022 Amir - Project Manager \u2022 Mohammad - Backend Developer \u2022 Parsa - Backend Developer \u2022 Faraz - Frontend Developer","title":"About"}]}